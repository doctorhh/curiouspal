z <- list(list(1,20, list(list(3, 4), list(5,  6))))
str(z)
z[1]
str(z[1])
str(z)
str(z[[1]])
str(z[[[1]]])
str(z[[1]])
str(z[[1]][1])
str(z[[1]][2])
str(z[[1]][3])
z <- list(list(1,2), list(list(3, 4), list(5,  6)))
z
library(purrr)
map(z,length)
str(z)
map_int(z,length)
map_int(z,mean)
map(z,mean)
map(z, mean)
zz <- list(x = 1:3, y = 4:5)
map(zz, mean)
str(zz)
map(zz, 2)
file_o
str(file_o)
file_o %>% map('hr_5min')
file_o %>% map_int('hr_5min')
file_o %>% map('hr_5min')
file_o %>% map('bedtime_start')
length(file_o %>% map('bedtime_start'))
class(file_o %>% map('bedtime_start'))
unlist(file_o %>% map('bedtime_start'))
lenght(unlist(file_o %>% map('bedtime_start')))
length(unlist(file_o %>% map('bedtime_start')))
flat_file_o <- flatten(file_o)
str(flat_file_o)
trans_file_o <- transpose(file_o)
str(trans_file_o)
trans_file_o$hr_5min
class(trans_file_o$hr_5min)
flatten_int(trans_file_o)
flatten(trans_file_o)
trans_file_o
flat_file_o
flat_file_o$is_longest
class(flat_file_o$is_longest)
class(flat_file_o$hr_5min)
c(TRUE, FALSE) && c(FALSE, FALSE)
length(file_o %>% map('hr_5min'))
file_o %>% map('hr_5min')
class(file_o %>% map('hr_5min'))
str(file_o)
file_o %>% map('hr_5min') %>% flatten()
file_o %>% map('hr_5min')
file_o %>% map('hr_5min') %>% flatten()
class(file_o %>% map('hr_5min') %>% flatten())
hr_5<-file_o %>% map('hr_5min') %>% flatten()
hr_5
hr_5[1]
str(file_o)
file_o %>% map('hr_5min') %>% flatten
file_o %>% map('hr_5min') %>% flatten %>% flatten_int()
??purrr::at_depth
l <- list(a = list(var.1 = 1, var.2 = 2, var.3 = 3)
, b = list(var.1 = 4, var.2 = 5, var.3 = 6)
, c = list(var.1 = 7, var.2 = 8, var.3 = 9)
, d = list(var.1 = 10, var.2 = 11, var.3 = 12)
)
l
str(l)
library (plyr)
df <- ldply (l, data.frame)
df
?ldply
library (plyr)
df <- ldply (file, data.frame)
df
file
library (plyr)
df <- ldply (file_o, data.frame)
df
str(df)
str(file_o)
View(file_o)
file_o$sleep[1,]
day1<-file_o$sleep[1,]
str(day1)
day1$hr_5min
objects(day1$hr_5min)
day1$hr_5min[1]
day1$hr_5min[2]
day1$hr_5min
d<-day1$hr_5min
typeof(d)
d
d[1]
d[2]
d<-unlist(day1$hr_5min)
d
d[1]
d[2]
View(day1)
as.data.frame(day1)
as.data.frame(day)
as.data.frame(d)
d<-as.data.frame(d)
merge(day1,2,sort = FALSE)
test<-merge(day1,2,sort = FALSE)
test
View(test)
d
day1
day1[-'hr_5min']
day1['hr_5min']
class(day1)
class(d)
merge(day1,d)
test<-merge(day1,d)
str(test)
test<-merge(day1,d, by='hr_5min')
day2<-day1 %>% select(-hr_5min)
test<-merge(day2,d)
length(day1$hypnogram_5min)
day1$hypnogram_5min
c<-day1$hypnogram_5min
class(c)
as.numeric(c)
length(as.integer(c))
s.numeric(str_extract(c, "[0-9]+"))
as.numeric(str_extract(c, "[0-9]+"))
library(stringr)
as.numeric(str_extract(c, "[0-9]+"))
lenght(as.numeric(str_extract(c, "[0-9]+")))
length(as.numeric(str_extract(c, "[0-9]+")))
nchar(c)
c
cdf <- as.data.frame(as.numeric(c))
cdf
cdf <- as.data.frame(c)
cdf
day3<- day1 %>% select(-c(hr_5min,rmssd_5min,hypnogram_5min))
dayx <- day1 %>% select(c(hr_5min,rmssd_5min,hypnogram_5min))
dayx <- day1 %>% select(c(hr_5min,rmssd_5min))
dayx
dayx <- day1 %>% select(c(hr_5min,rmssd_5min)) %>% as.data.frame()
dayx
str(dayx)
head(dayx)
d
dayx <- day1 %>% select(c(hr_5min,rmssd_5min)) %>% unlist %>% as.data.frame()
dayx
spread(dayx)
library(dplyr)
library(tidyr)
spread(dayx)
head(dayx)
dayx <- day1 %>% select(c(hr_5min,rmssd_5min)) %>% unlist %>% as.data.frame(c())
dayx <- day1 %>% select(c(hr_5min,rmssd_5min)) %>% unlist %>% as.data.frame(c('measure','value')
)
dayx <- day1 %>% select(c(hr_5min,rmssd_5min)) %>% unlist %>% as.data.frame('measure','value')
dayx <- day1 %>% select(c(hr_5min) %>% unlist %>% as.data.frame('measure')
)
dayx <- day1 %>% select(hr_5min) %>% unlist %>% as.data.frame('measure')
dayx <- day1 %>% select(hr_5min) %>% unlist %>% as.data.frame()
dayx
head(dayx)
dayx <- day1 %>% select(c(hr_5min,rmssd_5min)) %>% unlist %>% as.data.frame() %>% names(c('measure','value'))
dayx <- day1 %>% select(c(hr_5min,rmssd_5min)) %>% unlist %>% as.data.frame() %>% names('measure','value')
dayx <- day1 %>% select(c(hr_5min,rmssd_5min)) %>% unlist %>% as.data.frame() %>% names(c('measure','value'))
dayx <- day1 %>% select(c(hr_5min,rmssd_5min)) %>% unlist %>% as.data.frame() %>% names('value')
dayx <- day1 %>% select(c(hr_5min,rmssd_5min)) %>% unlist %>% as.data.frame() %>% names
dayx
dayx <- day1 %>% select(c(hr_5min,rmssd_5min)) %>% unlist %>% as.data.frame()
names(dayx) <- c('measure','value')
dayx <- day1 %>% select(c(hr_5min) %>% unlist %>% as.data.frame()
dayx <- day1 %>% select(hr_5min) %>% unlist %>% as.data.frame()
dayx
names(dayx) <- c('measure','value')
d
dayx <- day1 %>% select(hr_5min)
dayx
day_x<- as.data.frame(unlist(dayx))
names(day_x) <- 'hr'
day_x
unlist(dayx)
dayx
as.data.frame(dayx)
day_x<-as.data.frame(dayx)
day_x
head(day_x)
str(day_x)
day_x<- as.data.frame(unlist(dayx))
str(day_x)
d1<-unlist(dayx)
d1
str(d1)
names(d1)<-''
d1
dx<-as.data.frame(d1)
dx
head(dx)
names(dx) <- 'hr'
head(dx)
hypno <- file_o$sleep$hypnogram_5min[[2]]
hypno
nchar(hypno)
rm(list=ls())
library(jsonlite)
file <- fromJSON('sleep_oura.json')
file
str(file)
rm(file)
oura <- fromJSON('sleep_oura.json')
head(oura$sleep)
oura$sleep[1]
oura$sleep[1,]
oura$sleep[[1]]
str(oura)
str(oura$sleep)
df_oura <- oura$sleep
dft_oura <- oura$sleep
rm(df_oura)
dft_oura
dft_oura[1]
dft_oura[2]
dft_oura[7]
dft_oura[7][1]
dft_oura[1,7]
dft_oura[1,]
dayt <- dft_oura[1,]
dayt
class(dayt)
View(dayt)
class(dayt$hr_5min)
temp_df <- dft_oura %>% select(-c(hr_5min, rmmsd_5min,hypnogram_5min))
temp_df <- dft_oura %>% select(-c(hr_5min, rmssd_5min,hypnogram_5min))
temps_list_df <- dft_oura %>% select(hr_5min, rmssd_5min,hypnogram_5min)
str(temp_df)
temp_list_df <- dft_oura %>% select(hr_5min, rmssd_5min,hypnogram_5min)
rm(temps_list_df)
str(temp_list_df)
temp_df <- dayt %>% select(-c(hr_5min, rmssd_5min,hypnogram_5min))
temp_list_df <- dayt %>% select(hr_5min, rmssd_5min,hypnogram_5min)
View(dayt)
View(temp_list_df)
temp_list_df
transpose(temp_list_df)
temp_list_df[1]
class(temp_list_df[1])
class(temp_list_df[1][1])
temp_list_df[1][1]
temp_list_df[[1]]
class(temp_list_df[[1]])
temp_list_df[1]
temp_list_df[1] <- unlist(temp_list_df[1])
temp_list_df[1] <- as.data.frame(unlist(temp_list_df[1]))
length(temp_list_df)
length(temp_list_df[1])
length(unlist(temp_list_df[1]))
length(unlist(temp_list_df[[1]]))
length((temp_list_df[[1]])
)
length(temp_list_df)
length(temp_list_df$rmssd_5min)
length(temp_list_df$hr_5min)
length(temp_list_df$hr_5min[[1]])
length(temp_list_df$hr_5min[1)
length(temp_list_df$hr_5min[1])
temp_list_df$hr_5min
temp_df <- dayt %>% select(-c(hr_5min, rmssd_5min,hypnogram_5min))
temp_list_df <- dayt %>% select(hr_5min, rmssd_5min,hypnogram_5min)
temp_list_df$hr_5min
length(temp_list_df$hr_5min)
length(temp_list_df$hr_5min[[1]])
length(temp_list_df$hr_5min[1])
t_hr <- unlist(temp_list_df$hr_5min)
t_rmssd <- unlist(temp_list_df$rmssd_5min)
class(t_hr)
class(t_rmss)
class(t_rmssd)
temp_list_df$hypnogram_5min
nacht(temp_list_df$hypnogram_5min)
nchar(temp_list_df$hypnogram_5min)
class(temp_list_df$hypnogram_5min)
as.numeric(strsplit(temp_list_df$hypnogram_5min,"")[[1]])
t_hypno <- as.numeric(strsplit(temp_list_df$hypnogram_5min,"")[[1]])
class(t_hypno)
length(t_hypno)
t_df <- data.frame(c(t_hr,t_rmssd,t_hypno))
head(t_df)
t_df <- data.frame(t_hr,t_rmssd,t_hypno)
head(t_df)
t_df
day_df <- dayt %>% select(-c(hr_5min, rmssd_5min,hypnogram_5min))
our_df <- merge(day_df, t_df)
rm(our_df)
oura_df <- merge(day_df, t_df)
View(oura_df)
?data.frame
dim(dft_oura)
str(dft_oura)
nrow(dft_oura)
trx_night <- function(day){
#creating two data frame where one contain the (3) list to be transposed
day_df <- day %>% select(-c(hr_5min, rmssd_5min,hypnogram_5min))
temp_list_df <- day %>% select(hr_5min, rmssd_5min,hypnogram_5min)
#Extracting and converting list
t_hr <- unlist(temp_list_df$hr_5min)
t_rmssd <- unlist(temp_list_df$rmssd_5min)
t_hypno <- as.numeric(strsplit(temp_list_df$hypnogram_5min,"")[[1]])
#Creating temp DF
t_df <- data.frame(t_hr,t_rmssd,t_hypno)
#Merging the two dataframe to have a complete row night with all HR,RSMM and Hypno measure
oura_df <- merge(day_df, t_df)
return (oura_df)
}
day2 <- dft_oura[2,]
trx_night(day2)
df2_oura<-trx_night(day2)
str(df2_oura)
apply(dft_oura, trx_night)
apply(dft_oura, trx_night(x))
apply(dft_oura, 1, trx_night)
df_oura <- as.data.frame()
df_oura <- data.frame()
1:length(dft_oura)
1:nrow(dft_oura)
for (r in 1:nrow(dft_oura)){
temp_day <- dft_oura[r,]
dft <- trx_night(temp_day)
df_oura <- rbind(df_oura,dft)
}
df_oura
df_oura %>% group_by(summary_date)
df_oura %>% nest(ley=summary_date)
next<-df_oura %>% nest(ley=summary_date)
next<-df_oura %>% nest(key=summary_date)
df_oura %>% nest(key=summary_date)
df_oura
View(df_oura)
df_oura %>% filter(summary_date='2017-06-18')
df_oura %>% filter(summary_date=='2017-06-18')
df_oura %>% filter(summary_date='2017-06-18', unique(hr_average))
df_oura %>% filter(summary_date=='2017-06-18', unique(hr_average))
df_oura %>% filter(summary_date=='2017-06-18') %>% unique(hr_average)
df_oura %>% filter(summary_date=='2017-06-18') %>% hr_average
df_oura %>% filter(summary_date=='2017-06-18') %>% select(hr_average)
?select
df_oura %>% filter(summary_date=='2017-06-18') %>% select(unique(hr_average))
df_oura %>% filter(summary_date=='2017-06-18') %>% select(unique(.hr_average))
df_oura %>% filter(summary_date=='2017-06-18') %>% select(hr_average)
df_oura %>% filter(summary_date=='2017-06-18') %>% distinct(hr_average))$hr_average
df_oura %>% filter(summary_date=='2017-06-18') %>% distinct(hr_average)$hr_average
(df_oura %>% filter(summary_date=='2017-06-18') %>% distinct(hr_average))$hr_average
rm(list=ls())
library(jsonlite)
library(lubridate)
oura <- fromJSON('sleep_oura.json')
dft_oura <- oura$sleep
trx_night <- function(day){
#creating two data frame where one contain the (3) list to be transposed
day_df <- day %>% select(-c(hr_5min, rmssd_5min,hypnogram_5min))
temp_list_df <- day %>% select(hr_5min, rmssd_5min,hypnogram_5min)
#Extracting and converting list
t_hr <- unlist(temp_list_df$hr_5min)
t_rmssd <- unlist(temp_list_df$rmssd_5min)
t_hypno <- as.numeric(strsplit(temp_list_df$hypnogram_5min,"")[[1]])
#Calculating interval from bedtime_start to bedtime_end
#Date parsing from ISO to "POSIXct" "POSIXt"
s_date <- day_df$bedtime_start[r,]
e_date <- day_df$bedtime_end[r,]
#converting to POSIXct with Lubridate
s_pdate <- ymd_hms(s_date, tz = "CET")
e_pdate <- ymd_hms(e_date, tz = "CET")
#calculating 5min interval from Sleep Start to Sleep end
#This can/could/will be used for bulding a timeseries (zoo)
time_spam <- seq.POSIXt(s_pdate,e_pdate,by='5 min')
#Creating temp DF
t_df <- data.frame(t_hr,t_rmssd,t_hypno,time_spam)
#Merging the two dataframe to have a complete row night with all HR,RSMM and Hypno measure
oura_df <- merge(day_df, t_df)
return (oura_df)
}
df_oura <- data.frame()
for (r in 1:nrow(dft_oura)){
temp_day <- dft_oura[r,]
dft <- trx_night(temp_day)
df_oura <- rbind(df_oura,dft)
}
r
dft <- trx_night(temp_day)
day_df <- day %>% select(-c(hr_5min, rmssd_5min,hypnogram_5min))
day <- dft_oura[2,]
day_df <- day %>% select(-c(hr_5min, rmssd_5min,hypnogram_5min))
temp_list_df <- day %>% select(hr_5min, rmssd_5min,hypnogram_5min)
t_hr <- unlist(temp_list_df$hr_5min)
t_rmssd <- unlist(temp_list_df$rmssd_5min)
t_hypno <- as.numeric(strsplit(temp_list_df$hypnogram_5min,"")[[1]])
s_date <- day_df$bedtime_start[r,]
day_df$bedtime_start
for (r in 1:nrow(dft_oura)){
temp_day <- dft_oura[r,]
dft <- trx_night(temp_day)
df_oura <- rbind(df_oura,dft)
}
day_df$bedtime_start
s_date <- day_df$bedtime_start
e_date <- day_df$bedtime_end
s_pdate <- ymd_hms(s_date, tz = "CET")
e_pdate <- ymd_hms(e_date, tz = "CET")
time_spam <- seq.POSIXt(s_pdate,e_pdate,by='5 min')
t_df <- data.frame(t_hr,t_rmssd,t_hypno,time_spam)
View(t_df)
oura_df <- merge(day_df, t_df)
View(oura_df)
rm(list=ls())
oura <- fromJSON('sleep_oura.json')
dft_oura <- oura$sleep
trx_night <- function(day){
#creating two data frame where one contain the (3) list to be transposed
day_df <- day %>% select(-c(hr_5min, rmssd_5min,hypnogram_5min))
temp_list_df <- day %>% select(hr_5min, rmssd_5min,hypnogram_5min)
#Extracting and converting list
t_hr <- unlist(temp_list_df$hr_5min)
t_rmssd <- unlist(temp_list_df$rmssd_5min)
t_hypno <- as.numeric(strsplit(temp_list_df$hypnogram_5min,"")[[1]])
#Calculating interval from bedtime_start to bedtime_end
#Date parsing from ISO to "POSIXct" "POSIXt"
s_date <- day_df$bedtime_start
e_date <- day_df$bedtime_end
#converting to POSIXct with Lubridate
s_pdate <- ymd_hms(s_date, tz = "CET")
e_pdate <- ymd_hms(e_date, tz = "CET")
#calculating 5min interval from Sleep Start to Sleep end
#This can/could/will be used for bulding a timeseries (zoo)
time_spam <- seq.POSIXt(s_pdate,e_pdate,by='5 min')
#Creating temp DF
t_df <- data.frame(t_hr,t_rmssd,t_hypno,time_spam)
#Merging the two dataframe to have a complete row night with all HR,RSMM and Hypno measure
oura_df <- merge(day_df, t_df)
return (oura_df)
}
df_oura <- data.frame()
for (r in 1:nrow(dft_oura)){
temp_day <- dft_oura[r,]
dft <- trx_night(temp_day)
df_oura <- rbind(df_oura,dft)
}
?ymd_hms
rm(list=ls())
oura <- fromJSON('sleep_oura.json')
dft_oura <- oura$sleep
trx_night <- function(day){
#creating two data frame where one contain the (3) list to be transposed
day_df <- day %>% select(-c(hr_5min, rmssd_5min,hypnogram_5min))
temp_list_df <- day %>% select(hr_5min, rmssd_5min,hypnogram_5min)
#Extracting and converting list
t_hr <- unlist(temp_list_df$hr_5min)
t_rmssd <- unlist(temp_list_df$rmssd_5min)
t_hypno <- as.numeric(strsplit(temp_list_df$hypnogram_5min,"")[[1]])
#Calculating interval from bedtime_start to bedtime_end
#Date parsing from ISO to "POSIXct" "POSIXt"
s_date <- day_df$bedtime_start
e_date <- day_df$bedtime_end
#converting to POSIXct with Lubridate
s_pdate <- ymd_hms(s_date, quiet=TRUE, tz = "CET")
e_pdate <- ymd_hms(e_date, quiet=TRUE, tz = "CET")
#calculating 5min interval from Sleep Start to Sleep end
#This can/could/will be used for bulding a timeseries (zoo)
time_spam <- seq.POSIXt(s_pdate,e_pdate,by='5 min')
#Creating temp DF
t_df <- data.frame(t_hr,t_rmssd,t_hypno,time_spam)
#Merging the two dataframe to have a complete row night with all HR,RSMM and Hypno measure
oura_df <- merge(day_df, t_df)
return (oura_df)
}
df_oura <- data.frame()
for (r in 1:nrow(dft_oura)){
temp_day <- dft_oura[r,]
dft <- trx_night(temp_day)
df_oura <- rbind(df_oura,dft)
}
(df_oura %>% filter(summary_date=='2017-06-18') %>% distinct(hr_average))$hr_average
(df_oura %>% filter(summary_date=='2017-06-24') %>% distinct(hr_average))$hr_average
(df_oura %>% filter(summary_date=='2017-06-20') %>% distinct(hr_average))$hr_average
df_oura %>% select(hr_average,t_hr,time_spam) %>% filter(summary_date=='2017-06-18')
df_oura %>% select(hr_average,t_hr,time_spam,summary_date) %>% filter(summary_date=='2017-06-18')
oura_plot <- df_oura %>% select(hr_average,t_hr,time_spam,summary_date) %>% filter(summary_date=='2017-06-18')
oura_df %>% ggplot(aes(x=time_spam, y=t_hr)) + geom_point()
oura_plot %>% ggplot(aes(x=time_spam, y=t_hr)) + geom_point()
oura_plot <- df_oura %>% select(hr_average,t_hr,time_spam,summary_date) %>%
filter(summary_date=='2017-06-18') %>%
filter(t_hr!=0)
oura_plot %>% ggplot(aes(x=time_spam, y=t_hr)) + geom_point()
oura_plot %>% ggplot(aes(x=time_spam, y=t_hr)) + geom_line()
oura_plot %>% ggplot(aes(x=time_spam, y=t_hr)) + geom_line() + geom_smooth()
str(df_oura)
library(xts)
getwd()
getwd()
setwd('~/GitHub/curiouspal/Strava')
setwd('~/Documents/Development/R/curiouspal/Strava')
library(trackeR)
TCX_file <- readContainer('Morning_Run.tcx')
str(TCX_file)
run <- changeUnits(TCX_file, variable = "speed", unit = "km_per_h")
str(TCX_file)
head(TCX_file)
TCX_file[[1]]
heaD(TCX_file[[1]])
head(TCX_file[[1]])
