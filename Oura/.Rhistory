oura_end <- oauth_endpoint(NULL,'authorize','access_token',
base_url = "https://cloud.ouraring.com/oauth/authorize")
oura_end <- oauth_endpoint(NULL,'authorize','access_token',
base_url = "https://cloud.ouraring.com/oauth/")
oura_token <- oauth2.0_token(endpoint = oura_end, app = oura_app,
cache = FALSE,
use_basic_auth = TRUE)
oura_token <- oauth2.0_token(endpoint = oura_end, app = oura_app,
cache = FALSE,
use_basic_auth = TRUE)
oura_end <- oauth_endpoint(NULL,'authorize','access_token',
base_url = "https://cloud.ouraring.com/oauth")
oura_token <- oauth2.0_token(endpoint = oura_end, app = oura_app,
cache = FALSE,
use_basic_auth = TRUE)
authorize_url
resp<- GET(authorize_url,accept_json())
resp
resp<- GET(authorize_url,config(token = NULL))
resp
authorize_url
GET(authorize_url)
?GET
resp<- POST(authorize_url)
resp
resp<- GET(authorize_url)
resp
install.packages('httpuv')
install.packages("httpuv")
library(httpuv)
httpuv::startServer()
?httpuv
?startServer
oura_token <- oauth2.0_token(endpoint = oura_end, app = oura_app,
as_header = TRUE,
cache = FALSE,
use_basic_auth = TRUE)
library(httr)
oura_name <- 'CuriousPal' # chosen by user
oura_client_id  <- 'AEK3GDQG66C4AHVS' # an integer, assigned by Strava
oura_secret <- 'HAZ7HWIMFHLK2MVWPKJTL5MEMXX4OXXT' # an alphanumeric secret
oura_scope <- ''
oura_redirect <- 'http://localhost:1410'
oura_url <- "https://cloud.ouraring.com/oauth/authorize"
compact <- function(x) Filter(Negate(is.null), x)
authorize_url <- modify_url(oura_url, query = compact(list(
response_type = "token",
state = 'XXX',
redirect_uri = oura_redirect,
client_id = oura_client_id)))
resp<- GET(authorize_url)
resp
rp <- GET('https://cloud.ouraring.com/oauth/authorize?response_type=token&state=XXX&redirect_uri=http%3A%2F%2Flocalhost%3A1410&client_id=AEK3GDQG66C4AHVS')
rp
oura_app <- oauth_app(oura_name,key = oura_client_id, secret = oura_secret)
oura_end <- oauth_endpoint(NULL,'authorize','access_token',
base_url = "https://cloud.ouraring.com/oauth")
oura_token <- oauth2.0_token(endpoint = oura_end, app = oura_app,
as_header = TRUE,
cache = FALSE,
use_basic_auth = TRUE)
oura_token <- oauth2.0_token(endpoint = oura_end, app = oura_app,
as_header = TRUE,
cache = FALSE,
use_basic_auth = TRUE,
use_oob = getOption("httr_oob_default"))
httpuv::runServer(localhost,1410)
httpuv::runServer(localhost,1410,app = '')
httpuv::runServer('http://localhost',port = 1410,app = '')
runServer('http://localhost',port = 1410,app = '')
runServer(host = 127.0.0.1,port = 1410,app = '')
runServer(host = '127.0.0.1',port = 1410,app = '')
startServer(host = '127.0.0.1',port = 1410,app = '')
runServer(startServer(host = '127.0.0.1',port = 1410,app = ''))
curl_docs()
?POST
resp<- POST(authorize_url)
resp
resp<- BROWSE(authorize_url)
demo("echo", package="httpuv")
runServer("0.0.0.0", 1410, app, 250)
startDaemonizedServer('0.0.0.0', 1410, app)
resp<- BROWSE(authorize_url)
resp
?BROWSE
BROWSE(authorize_url)
BROWSE(authorize_url.accept_json())
BROWSE(authorize_url,accept_json())
GET(BROWSE(authorize_url))
resp<-GET(BROWSE(authorize_url))
resp
access_token=QG2ATLSU7AH2OITR3SSUNXNYDOVATM3V
oura_token=QG2ATLSU7AH2OITR3SSUNXNYDOVATM3V
req <- GET("https://api.ouraring.com/v1/userinfo", access_token=oura_token)
req
user_info <- modify_url("https://api.ouraring.com/v1/userinfo",
query = list(access_token = 'QG2ATLSU7AH2OITR3SSUNXNYDOVATM3V'))
req <- GET(user_info)
req
req <- GET(user_info,accept_json())
req
BROWSE(authorize_url)
user_info <- modify_url("https://api.ouraring.com/v1/userinfo",
query = list(access_token = 'QG2ATLSU7AH2OITR3SSUNXNYDOVATM3V'))
user_info
authorize_url <- modify_url(oura_url, query = compact(list(
response_type = "token",
state = 'XXX',
redirect_uri = oura_redirect,
scope = list('email,personal'),
client_id = oura_client_id)))
BROWSE(authorize_url)
oura_token = 'MYUHYLCL4LJPELU2YEXYJOKPYPTZXRMT'
authorize_url <- modify_url(oura_url, query = compact(list(
response_type = "token",
state = 'XXX',
redirect_uri = oura_redirect,
scope = '',
client_id = oura_client_id)))
BROWSE(authorize_url)
library(httr)
oura_name <- 'CuriousPal' # chosen by user
oura_client_id  <- 'AEK3GDQG66C4AHVS' # an integer, assigned by Strava
authorize_url <- modify_url(oura_url, query = compact(list(
response_type = "token",
state = 'XXX',
#  redirect_uri = oura_redirect,
client_id = oura_client_id)))
GET(authorize_url)
BROWSE(authorize_url)
fromJSON(authorize_url)
library(jsonlite)
fromJSON(authorize_url)
library(‘RCurl’) library(‘XML’)
library(‘RCurl’)
library(RCurl)
library(XML)
getURL(authorize_url)
test<-getURL(authorize_url)
test
?rcurl
resp <- URLencode(authorize_url)
resp
?URLencode
resp <- getURL(authorize_url)
resp
?init_oauth2.0
?modify_url
user = 'hans.harvey@h2hteam.com'
pwd = 'Mutzen11!'
authorize_url <- modify_url(oura_url, query = compact(list(
response_type = "token",
state = 'XXX',
redirect_uri = oura_redirect,
client_id = oura_client_id,
username = username,
password=pwd)))
GET(authorize_url)
oura_app <- oauth_app(oura_name,key = oura_client_id, secret = oura_secret, response_type='token')
oura_end <- oauth_endpoint(NULL,'authorize','access_token',response_type='token',
base_url = "https://cloud.ouraring.com/oauth")
oura_token <- oauth2.0_token(endpoint = oura_end, app = oura_app,
as_header = TRUE,
cache = FALSE,
use_basic_auth = TRUE,
use_oob = getOption("httr_oob_default"))
oura_token <- oauth2.0_token(endpoint = oura_end, app = oura_app,
response_type='token'
as_header = TRUE,
cache = FALSE,
use_basic_auth = TRUE,
use_oob = getOption("httr_oob_default"))
oura_token <- oauth2.0_token(endpoint = oura_end, app = oura_app,
response_type='token',
as_header = TRUE,
cache = FALSE,
use_basic_auth = TRUE,
use_oob = getOption("httr_oob_default"))
oauth_header(response_type='token')
?oauth_signature
authorize_url <- modify_url(oura_url, query = compact(list(
response_type = "token",
state = 'XXX',
redirect_uri = oura_redirect,
client_id = oura_client_id,
access_type="offline")))
library(httr)
oura_name <- 'CuriousPal' # chosen by user
oura_client_id  <- 'AEK3GDQG66C4AHVS' # an integer, assigned by Strava
oura_redirect <- 'http://localhost:1410'
oura_url <- "https://cloud.ouraring.com/oauth/authorize"
compact <- function(x) Filter(Negate(is.null), x)
authorize_url <- modify_url(oura_url, query = compact(list(
response_type = "token",
state = 'XXX',
redirect_uri = oura_redirect,
client_id = oura_client_id,
access_type="offline")))
resp<-GET(authorize_url)
resp
authorize_url <- modify_url(oura_url, query = compact(list(
response_type = "token",
state = 'XXX',
redirect_uri = oura_redirect,
client_id = oura_client_id)))
BROWSE(authorize_url)
install.packages(tidyverse)
install.packages('tidyverse')
library(jsonlite)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(jsonlite)
source('~/GitHub/curiouspal/Oura/oura_output_tidydata.R', echo=TRUE)
library(purrr)
file <- fromJSON('sleep_oura.json')
class(file)
file
str(file)
file$sleep$awake
file$sleep$summary_date
file$sleep$period_id
file$sleep$onset_latency
file$sleep$bedtime_start
file$sleep$bedtime_start[1]
date<-file$sleep$bedtime_start[1]
date
parse_date(date)
class(date)
library(parsedate)
parse_date(date)
parse_iso_8601(dates)
parse_date <- parse_date(dates)
parse_date <- parse_date(date)
parse_iso_8601(date)
date
parse_date <- parse_iso_8601(date)
parse_character()
pdate <- parse_iso_8601(date)
pdate
class(pdate)
pdate[1]
library(stringr)
strptime(pdate, format = "%Y-%m-%Y %H:%M:%S")
strptime(pdate, format = "%Y-%m-%Y %H:%M:%s")
strptime(pdate, format = "%Y-%m-%d %H:%M:%s")
pdate
strptime(pdate, format = "%Y-%m-%d %H:%M:%s")
class(pdate)
str(date)
date
?strptime
strptime(pdate, format = "%Y-%m-%d %H:%M:%s", tz='UTC')
strptime(pdate, format = "%Y-%m-%d %H:%M:%s", tz='')
strptime(pdate, format = "%Y-%m-%d %H:%M:%s", tz='UTC')
as.POSIXct(strptime(pdate, format = "%Y-%m-%d %H:%M:%s", tz='UTC'))
strptime(pdate, format = "%Y-%m-%d %H:%M:%s", tz='UTC')
ymd_hms(date, tz = "Europe/Berlin")
library(lubridate)
ymd_hms(date, tz = "Europe/Berlin")
pdate2<-ymd_hms(date, tz = "Europe/Berlin")
pdate2
year(pdate2)
strptime(pdate2, format = "%Y-%m-%d %H:%M:%s", tz='UTC')
strptime(pdate2, format = "%Y-%m-%d %H:%M:%s", tz='')
pdate
pdate2
?parse_iso_8601
date <- file$sleep$bedtime_start[1]
pdate <- parse_iso_8601(date)
date
pdate
pdate2
pdate <- ymd_hms(date, tz = "CET")
pdate
pdate2
time <- function(t) {hour(t)*3600+minute(t)*60+second(t)}
time(pdate)
hour(pdate)
paste(hour(pdate),':')
?paste0
strptime(pdate, format = '%H:%M:%S')
pdate
?format
format(pdate,'%H:%M:%S')
class(format(pdate,'%H:%M:%S'))
s_date <- file$sleep$bedtime_start[1]
e_date <- file$sleep$bedtime_end[1]
s_pdate <- ymd_hms(s_date, tz = "CET")
e_pdate <- ymd_hms(e_date, tz = "CET")
time_spam <- seq.POSIXt(s_pdate,e_pdate,by='5 min')
time_spam
str(file)
glimpse(file)
glimpse(file$sleep)
df3$Time=df3$Time$sec + df3$Time$min*60 + df3$Time$hour*3600
s_date$Time
s_pdate$Time
rep(date,length(file$sleep$hr_5min))
rep(date,length(file$sleep$hr_5min[1]))
rep(date,length(file$sleep$hr_5min[[1]]))
time_spam
library(zoo)
hr_5 <- file$sleep$hr_5min[[1]]
hr_5
class(hr_5)
ts_oura <- xts(hr_5,time_spam)
library(zoo)
ts_oura <- xts(hr_5,time_spam)
install.packages('xts')
ts_oura <- xts(hr_5,time_spam)
library(xts)
ts_oura <- xts(hr_5,time_spam)
ts_oura
time_spam
s_pdate <- ymd_hms(s_date, tz = "CEST")
e_pdate <- ymd_hms(e_date, tz = "CEST")
s_pdate <- ymd_hms(s_date, tz = "CET")
e_pdate <- ymd_hms(e_date, tz = "CET")
time_spam <- seq.POSIXt(s_pdate,e_pdate,by='5 min')
time_spam
now()
ts_oura
s_pdate <- ymd_hms(s_date, tz = "Europe/Berlin")
e_pdate <- ymd_hms(e_date, tz = "Europe/Berlin")
time_spam <- seq.POSIXt(s_pdate,e_pdate,by='5 min')
ts_oura <- xts(hr_5,time_spam)
ts_oura
head(ts_oura)
s_pdate <- ymd_hms(s_date, tz = "CET")
e_pdate <- ymd_hms(e_date, tz = "CET")
time_spam <- seq.POSIXt(s_pdate,e_pdate,by='5 min')
ts_oura <- xts(hr_5,time_spam)
head(ts_oura)
class(ts_oura)
ts_oura[1]
ts_oura[1,]
ts_oura[,1]
ts_oura[]
file$sleep$bedtime_start[1]
class(file$sleep$bedtime_start[1])
parse_iso_8601(s_date)
parse_date_time(date)
parse_iso_8601(date)
format_iso_8601(parse_iso_8601(date))
parse_iso_8601(s_date)
class(parse_iso_8601(s_date))
class(file$sleep$bedtime_start[1])
parsedate::parse_date(date)
strptime(date,format = '%Y:%M:%dT%H:%M:%S')
strptime(date,format = '%Y:%M:%d %H:%M:%S')
strptime(date,format = '%Y:%M:%d %H:%M:%S+')
strptime(date,format = '%Y:%M:%d %H:%M:%S+%H%:%M')
strptime(date,format = '%Y:%M:%dT%H:%M:%S+%H%:%M')
ts_oura
ts_oura['2016']
ts_oura['2017']
ts_oura['2017-06-17 03:41:43']
time_spam
str(file)
str(file$sleep)
class(file$sleep)
?fromJSON
file <- fromJSON('sleep_oura.json', dataframe = 'values')
file <- fromJSON('sleep_oura.json', flatten = TRUE)
str(file)
file <- fromJSON('sleep_oura.json')
file <- fromJSON('sleep_oura.json', simplifyDataFrame = TRUE)
str(file)
file <- fromJSON('sleep_oura.json')
names(flatten(file))
plot(ts_oura)
tzone(ts_oura)
tzone(ts_oura) <-'CEST'
head(ts_oura)
tzone(ts_oura) <-'CET'
head(ts_oura)
timezone()
na.omit(ts_oura)
na.locf(ts_oura)
ts_oura[]
names(ts_oura)
names(ts_oura)<-'HR'
names(ts_oura)
head(ts_oura)
ts_oura['HR'!=0]
ts_oura['HR'==0]
ts_oura['HR']
ts_oura
ts_oura[ts_oura != 0]
ts_oura_clean <- ts_oura[ts_oura != 0]
plot(ts_oura_clean)
time_spam
hr_5
cbind(time_spam,hr_5)
class(cbind(time_spam,hr_5))
as.data.frame(cbind(time_spam,hr_5))
class(time_spam)
df_oura <- data.frame(time_spam,hr_5)
head(df_oura)
??dplyr
class(df_oura)
str(df_oura)
data.frame(a = NA, b = NA, C = NA)
data.frame(Time = as.Date(), HR = as.integer)
data.frame(Time = as.Dates(), HR = as.integer)
data.frame(Time = as.Date(), HR = as.integer())
data.frame(Time = as.Date(character()), HR = as.integer())
df <- data.frame(Time = as.Date(character()), HR = as.integer())
df
str(df)
df <- rbind(df,df_oura)
df
df_oura <- data.frame(Time=time_spam,HR=hr_5)
df <- data.frame(Time = as.Date(character()), HR = as.integer())
df
df_oura
head(df_oura)
df
df_merge <- rbdind(df,df_oura)
df_merge <- rbind(df,df_oura)
df_merge
head(df_merge)
hr <- file$sleep$hr_5min[[1]]
hr
hr <- file$sleep$hr_5min[[1]]
s_date <- file$sleep$bedtime_start[1]
e_date <- file$sleep$bedtime_end[1]
s_pdate <- ymd_hms(s_date, tz = "CET")
e_pdate <- ymd_hms(e_date, tz = "CET")
time_spam <- seq.POSIXt(s_pdate,e_pdate,by='5 min')
df_oura <- data.frame(Time = as.Date(character()), HR = as.integer())
df_day <- data.frame(Time=time_spam,HR=hr)
df_oura <- rbdind(df,df_oura)
df_oura <- rbind(df,df_oura)
df_oura
df_oura <- rbind(df_oura,df_day)
df_oura
plot(df_oura)
plot(df_oura$Time,df_oura$HR)
na.omit(df_oura)
df_oura[na.omit(df_oura$HR)]
df_oura[na.omit(df_oura$HR),]
df_oura[na.omit(df_oura$HR)]
df_oura[,na.omit(df_oura$HR)]
df_oura[,is.na(df_oura$HR)]
df_oura[is.na(df_oura$HR)]
df_oura[!is.na(df_oura$HR)]
df_oura %>% filter(HR != 0)
df_oura_clean <- df_oura %>% filter(HR != 0)
plot(df_oura_clean$Time,df_oura_clean$HR)
ggplot(df_oura_clean, aes(x=Time, y=HR))+geom_point()
str(df_oura_clean)
mean(df_oura_clean$HR)
file$sleep$hr_average
mean(df_oura$HR)
ggplot(df_oura_clean, aes(x=Time, y=HR))+geom_point() + geom_smooth()
ggplot(df_oura_clean, aes(x=Time, y=HR))+geom_point() + geom_smooth(span = 0.5)
ggplot(df_oura_clean, aes(x=Time, y=HR))+geom_point() + geom_smooth(span = 0.3)
ggplot(df_oura_clean, aes(x=Time, y=HR))+geom_point() + geom_smooth(span = 0.8)
ggplot(df_oura_clean, aes(x=Time, y=HR))+geom_point() + geom_smooth(span = 0.7)
ggplot(df_oura_clean, aes(x=Time, y=HR))+geom_point() + geom_smooth(span = 0.75)
ggplot(df_oura_clean, aes(x=Time, y=HR))+geom_point() + geom_smooth(span = 0.5)
ggplot(df_oura_clean, aes(x=Time, y=HR))+geom_point() + geom_smooth(span = 0.8)
rsmmd <- file$sleep$rmssd_5min[[1]]
df_oura <- data.frame(Time = as.Date(character()), HR = as.integer(), RMSSD = as.integer())
rmssd <- file$sleep$rmssd_5min[[1]]
df_day <- data.frame(Time=time_spam,HR=hr, RMSSD=rmssd)
df_oura <- rbind(df_oura,df_day)
df_oura_clean <- df_oura %>% filter(HR != 0)
df_oura_clean
str(file)
df_oura %>% nest(key=Time)
df_next<-df_oura %>% nest(key=Time)
df_nest<-df_oura %>% nest(key=Time)
df_nest
df_nest$HR_AVG <- file$sleep$hr_average
str(df_oura_clean)
hr_avg <- rep(file$sleep$hr_average[1], length(file$sleep$hr_average))
hr_avg
hr_avg <- rep(file$sleep$hr_average[1], length(file$sleep$hr_5min))
hr_avg
hr_avg <- rep(file$sleep$hr_average[1], length(file$sleep$hr_5min[[1]]))
hr_avg
hr_avg <- rep(file$sleep$hr_average[1], length(file$sleep$hr_5min[[1]]))
df_oura <- data.frame(Time = as.Date(character()), HR = as.integer(), RMSSD = as.integer(),
HR_AVG=hr_avg)
df_oura <- data.frame(Time = as.Date(character()), HR = as.integer(), RMSSD = as.integer(),
HR_AVG=as.integer())
df_day <- data.frame(Time=time_spam,HR=hr, RMSSD=rmssd, HR_AVG=hr_avg)
df_oura <- rbind(df_oura,df_day)
df_oura_clean <- df_oura %>% filter(HR != 0)
df_oura
df_oura %>% group_by(Time) %>% summarise(avg=mean(HR))
day <- rep(file$sleep$summary_date[1] , length(file$sleep$hr_5min[[1]]))
df_oura <- data.frame(Day = as.character(), Time = as.Date(character()), HR = as.integer(), RMSSD = as.integer(),
HR_AVG=as.integer())
df_day <- data.frame(Day = day, Time=time_spam,HR=hr, RMSSD=rmssd, HR_AVG=hr_avg)
df_oura <- rbind(df_oura,df_day)
df_oura
df_oura %>% group_by(Time) %>% summarise(avg=mean(HR))
df_oura %>% group_by(Day) %>% summarise(avg=mean(HR))
mean_hr <- df_oura %>% group_by(Day) %>% summarise(avg=mean(HR))
mean_hr
mean_hr$Day
class(mean_hr$Day)
class(mean_hr$avg)
str(df_oura)
str(file)
View(df_oura_clean)
?size
object.size(df_oura)
